

global proc string getModelPanel()
    {
	string $modelPanel;
	if (`modelEditor -q -activeView modelPanel1`) $modelPanel = "modelPanel1";
	if (`modelEditor -q -activeView modelPanel2`) $modelPanel = "modelPanel2";
	if (`modelEditor -q -activeView modelPanel3`) $modelPanel = "modelPanel3";
	if (`modelEditor -q -activeView modelPanel4`) $modelPanel = "modelPanel4";

	// dragger works now for up to 10 tear off panels
	// if you need more, add more lines and increase the numbers...
	if (`modelEditor -exists modelPanel5`) if (`modelEditor -q -activeView modelPanel5`) $modelPanel = "modelPanel5";
	if (`modelEditor -exists modelPanel6`) if (`modelEditor -q -activeView modelPanel6`) $modelPanel = "modelPanel6";
	if (`modelEditor -exists modelPanel7`) if (`modelEditor -q -activeView modelPanel7`) $modelPanel = "modelPanel7";
	if (`modelEditor -exists modelPanel8`) if (`modelEditor -q -activeView modelPanel8`) $modelPanel = "modelPanel8";
	if (`modelEditor -exists modelPanel9`) if (`modelEditor -q -activeView modelPanel9`) $modelPanel = "modelPanel9";
	if (`modelEditor -exists modelPanel10`) if (`modelEditor -q -activeView modelPanel10`) $modelPanel = "modelPanel10";
	if (`modelEditor -exists modelPanel11`) if (`modelEditor -q -activeView modelPanel11`) $modelPanel = "modelPanel11";
	if (`modelEditor -exists modelPanel12`) if (`modelEditor -q -activeView modelPanel12`) $modelPanel = "modelPanel12";
	if (`modelEditor -exists modelPanel13`) if (`modelEditor -q -activeView modelPanel13`) $modelPanel = "modelPanel13";
	if (`modelEditor -exists modelPanel14`) if (`modelEditor -q -activeView modelPanel14`) $modelPanel = "modelPanel14";
	if (`modelEditor -exists modelPanel15`) if (`modelEditor -q -activeView modelPanel15`) $modelPanel = "modelPanel15";
    return $modelPanel;
    }

///////////////////////////////////////////////////////////////////////////////////////










////////////////////////////////////////////////////////////////////////////////////;
global proc createCones()
    {

/////// find the selected locators and camera
    string $currentSelection[] = `ls -sl`;  select -hierarchy;
  	string $modelPanel = getModelPanel();
	string $cameras = `modelEditor -q -camera $modelPanel`;
	//print ($cameras + " " + (`objectType $cameras`));
	if (!`gmatch $cameras "cameras"`)
	    {
	    string $camera[] = `listRelatives -c $cameras`;
	//    string $camera[] = `listRelatives -c left_track`;
	    $cameras = $camera[0];
	    }
    string $cameraTrans[] = `listRelatives -p $cameras`;
    string $locators[] = `ls -type locator -sl`;

////// import in cone if not already /////////////////

    string $cone = `objExists "cone_0Shape1"`;
    if ($cone == 0)
        {
        file -import -type "mayaAscii" "/home/DForgacs/dev/MayaTools/matchmove_shelf/mel/cone.ma";
        }

/////////////////// loop and aim and point constrain duplicate cones ///////

    string $polygon = "cone_01"; select -cl;
    group -em -name "cones";
    for ($i =0; $i < size($locators); $i ++)
        {
        string $locTran[] = `listRelatives -p $locators[$i]`;
        string $dupPoly[] = `duplicate $polygon`;
        pointConstraint $locTran[0] $dupPoly[0] ;
        aimConstraint -o 0 0 0 $cameraTrans[0] $dupPoly[0] ;
        parent $dupPoly[0] "cones";
        }
    parent "cone_01" "cones"; setAttr "cone_01.v" 0;
  //  expression -s ("cone_01.sy = cone_01.sx"); expression -s ("cone_01.sz = cone_01.sx");
    select $currentSelection; relevantToCameraExp;

}
//////////////////////////////////////////////////////////////////////////////////////





//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////

global proc relevantToCameraExp()
    {

    select -hierarchy;
    string $cameraAndLoc[] = `ls -sl`;

  	string $modelPanel = getModelPanel();
	string $cameras = `modelEditor -q -camera $modelPanel`;
    string $camTran[] = `listRelatives -p $cameras`;

    string $con[] = `ls -type mesh "cone*"`;
    string $items[] = {"cone_01"};
    string $cones[] = stringArrayRemove($items, $con);



    string $currExp[] = `ls -type expression "scl*"`;
    if (size($currExp) > 0)
        {
        delete $currExp;
        }
    string $currExp[] = `ls -type expression "rel*"`;
    if (size($currExp) > 0)
        {
        delete $currExp;
        }



    int $selectedRadio = `radioButtonGrp -q -sl "whichScale"`;

///////////// if standard scale selected ///////////////////////////

    if ($selectedRadio == 1)
        {
        for ($i =0; $i < size($cones); $i ++)
            {
            string $locTran[] = `listRelatives -p $cones[$i]`;
            print ($locTran[0] + ".sx = " + $items[0] + ".sx\n");
            if (!`gmatch $items[0] $locTran[0]`)
                {
                expression -s ($locTran[0] + ".sx = " + $items[0] + ".sx") -n ("sclx" + $i);
                expression -s ($locTran[0] + ".sy = " + $items[0] + ".sy") -n ("scly" + $i);
                expression -s ($locTran[0] + ".sz = " + $items[0] + ".sz") -n ("sclz" + $i);
                }
           }
       }


///////////// scale relevant to the camera ///////////////////////////

    if ($selectedRadio == 2)
        {

        float $pos2[] = `getAttr ($camTran[0] + ".translate")`;
        float $nearestDist = 10000; string $nearestLocator;
        for ($i =0; $i < size($cones); $i ++)
            {
            string $locTran[] = `listRelatives -p $cones[$i]`;
            float $pos1[] = `getAttr ($locTran[0] + ".translate")`;
            float $dist = sqrt(((($pos1[0]-$pos2[0])*($pos1[0]-$pos2[0]))+(($pos1[1]-$pos2[1])*($pos1[1]-$pos2[1]))+(($pos1[2]-$pos2[2])*($pos1[2]-$pos2[2]))));
            if ($dist < $nearestDist)
                {
                $nearestDist = $dist;
                $nearestLocator = $locTran[0];
                }
            }

        print ("Nearest Locator: " + $nearestLocator + "\tDistance To Camera: " + $nearestDist);
        for ($i =0; $i < size($cones); $i ++)
            {
            string $locTran[] = `listRelatives -p $cones[$i]`;
            string $closest = ("float $pos1[] = `getAttr (\"" + $items[0] + ".translate\")`;\n") ;
            string $getCa = ("float $pos2[] = `getAttr (\"" + $camTran[0] + ".translate\")`;\n") ;
            string $distCa = "float $distCa = sqrt(((($pos1[0]-$pos2[0])*($pos1[0]-$pos2[0]))+(($pos1[1]-$pos2[1])*($pos1[1]-$pos2[1]))+(($pos1[2]-$pos2[2])*($pos1[2]-$pos2[2]))));\n";


            string $getPos = ("float $pos1[] = `getAttr (\"" + $locTran[0] + ".translate\")`;\n") ;
            string $dista = "float $dist = sqrt(((($pos1[0]-$pos2[0])*($pos1[0]-$pos2[0]))+(($pos1[1]-$pos2[1])*($pos1[1]-$pos2[1]))+(($pos1[2]-$pos2[2])*($pos1[2]-$pos2[2]))));\n";
            string $newScale = "float $newSc = ($dist/$distCa);\n";

            string $ex = $closest + $getCa + $distCa + $getPos + $dista + $newScale;
            string $x = ($ex + "float $cu = " + $items[0] + ".sx;\n" + $locTran[0] + ".sx = ($cu * $newSc);\n");
            string $y = ($ex + "float $cy = " + $items[0] + ".sy;\n" + $locTran[0] + ".sy = ($cy * $newSc);\n");
            string $z = ($ex + "float $cz = " + $items[0] + ".sz;\n" + $locTran[0] + ".sz = ($cz *$newSc);\n");

            if (!`gmatch $items[0] $locTran[0]`)
                {
                expression -s ($x) -n ("relx" + $i);  expression -s ($y) -n ("rely" + $i); expression -s ($z) -n ("relz" + $i);
                }
            }
        }
    createConesGUI;
}

//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////






//////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////// delete cones /////////////////////////////////////////


global proc deleteCones()
    {
    string $currExp[] = `ls -type expression "*l*"`;
    string $shadingEngine[] = `listConnections -type "shadingEngine" "cone_0Shape1"`;
    string $shader[] = `listConnections -type "lambert" $shadingEngine[0]`;
    delete $currExp; delete "cones"; delete $shadingEngine; delete $shader;
    createConesGUI;
    }

//////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////






//////////////////////////////////////////////////////////////////////////////////////
///////////////////////////// CREATE CONES GUI ///////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////

global proc createConesGUI()
     {
      if(`window -q -ex createConesGUI`)
      {deleteUI createConesGUI;}

        window -title "createCones" -w 200 -h 30 createConesGUI;
        columnLayout;
        int $selected = 1;
        if ((size(`ls -type expression "rel*"`)) > 0)
            {
            $selected = 2;
            }

        radioButtonGrp -nrb 2 -cc relevantToCameraExp -l "Cone Scale      " -la2 "Standard" "Relevant To Camera" -select $selected "whichScale";



        columnLayout  -cal left ; string $d = "================================================";
        int $cone01 = `objExists "cone_01"`;
        if ($cone01 == 1)
            {
            columnLayout -adjustableColumn true;
            text -l ($d + "\nSet Cone Colour\n") -fn boldLabelFont -align "center";

            string $shadingEngine[] = `listConnections -type "shadingEngine" "cone_0Shape1"`;
            string $shader[] = `listConnections -type "lambert" $shadingEngine[0]`;
            attrColorSliderGrp -label "Cone Colour" -at ($shader[0] + ".color") "coneColor";

            text -l  ("\n" + $d + "\nSet Cone Scale\n")  -fn boldLabelFont -align "center";

            attrFieldSliderGrp -label "ScaleY:" -min -0.0 -max 60.0 -at ("cone_01.sy");
            attrFieldSliderGrp -label "ScaleZ:" -min -0.0 -max 60.0 -at ("cone_01.sz");
            }
        text -l "" -fn boldLabelFont -align "center";
        rowLayout -numberOfColumns 2 -cw2 203 203;
        button -bgc 1.000 0.5 0.1 -label "Create Cones" -w 203 -c createCones;
        button -bgc 0.832 0.0 0.832 -label "Delete Cones" -w 203  -c deleteCones;
        setParent..;

        button -bgc 0 0.8 0 -label "OK" -w 406  -c {"deleteUI createConesGUI;"};
        showWindow createConesGUI;
    }
createConesGUI;



